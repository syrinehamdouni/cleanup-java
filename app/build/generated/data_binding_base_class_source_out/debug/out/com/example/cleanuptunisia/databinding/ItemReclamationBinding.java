// Generated by view binder compiler. Do not edit!
package com.example.cleanuptunisia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleanuptunisia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReclamationBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView addressTextView;

  @NonNull
  public final TextView cityTextView;

  @NonNull
  public final TextView dateTextView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final TextView municipalityTextView;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final ImageView wasteImageView;

  @NonNull
  public final TextView wasteTypesTextView;

  private ItemReclamationBinding(@NonNull CardView rootView, @NonNull TextView addressTextView,
      @NonNull TextView cityTextView, @NonNull TextView dateTextView,
      @NonNull TextView descriptionTextView, @NonNull TextView municipalityTextView,
      @NonNull TextView statusTextView, @NonNull ImageView wasteImageView,
      @NonNull TextView wasteTypesTextView) {
    this.rootView = rootView;
    this.addressTextView = addressTextView;
    this.cityTextView = cityTextView;
    this.dateTextView = dateTextView;
    this.descriptionTextView = descriptionTextView;
    this.municipalityTextView = municipalityTextView;
    this.statusTextView = statusTextView;
    this.wasteImageView = wasteImageView;
    this.wasteTypesTextView = wasteTypesTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReclamationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReclamationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reclamation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReclamationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressTextView;
      TextView addressTextView = ViewBindings.findChildViewById(rootView, id);
      if (addressTextView == null) {
        break missingId;
      }

      id = R.id.cityTextView;
      TextView cityTextView = ViewBindings.findChildViewById(rootView, id);
      if (cityTextView == null) {
        break missingId;
      }

      id = R.id.dateTextView;
      TextView dateTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTextView == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.municipalityTextView;
      TextView municipalityTextView = ViewBindings.findChildViewById(rootView, id);
      if (municipalityTextView == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.wasteImageView;
      ImageView wasteImageView = ViewBindings.findChildViewById(rootView, id);
      if (wasteImageView == null) {
        break missingId;
      }

      id = R.id.wasteTypesTextView;
      TextView wasteTypesTextView = ViewBindings.findChildViewById(rootView, id);
      if (wasteTypesTextView == null) {
        break missingId;
      }

      return new ItemReclamationBinding((CardView) rootView, addressTextView, cityTextView,
          dateTextView, descriptionTextView, municipalityTextView, statusTextView, wasteImageView,
          wasteTypesTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
