// Generated by view binder compiler. Do not edit!
package com.example.cleanuptunisia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleanuptunisia.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWasteTypeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText addressEditText;

  @NonNull
  public final Spinner citySpinner;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final MaterialCardView glassCard;

  @NonNull
  public final EditText imageDescription;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final MaterialCardView metalCard;

  @NonNull
  public final Spinner municipalitySpinner;

  @NonNull
  public final MaterialCardView otherCard;

  @NonNull
  public final MaterialCardView paperCard;

  @NonNull
  public final MaterialCardView plasticCard;

  @NonNull
  public final Button positionButton;

  @NonNull
  public final Button previewButton;

  @NonNull
  public final LinearLayout spinnerContainer;

  @NonNull
  public final MaterialCardView textileCard;

  @NonNull
  public final TextView titleAddress;

  @NonNull
  public final ImageView wasteImageView;

  @NonNull
  public final LinearLayout wasteTypeContainer;

  @NonNull
  public final HorizontalScrollView wasteTypeScrollView;

  @NonNull
  public final TextView wasteTypeTitle;

  private ActivityWasteTypeBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText addressEditText, @NonNull Spinner citySpinner,
      @NonNull Button continueButton, @NonNull MaterialCardView glassCard,
      @NonNull EditText imageDescription, @NonNull TextView locationTextView,
      @NonNull MaterialCardView metalCard, @NonNull Spinner municipalitySpinner,
      @NonNull MaterialCardView otherCard, @NonNull MaterialCardView paperCard,
      @NonNull MaterialCardView plasticCard, @NonNull Button positionButton,
      @NonNull Button previewButton, @NonNull LinearLayout spinnerContainer,
      @NonNull MaterialCardView textileCard, @NonNull TextView titleAddress,
      @NonNull ImageView wasteImageView, @NonNull LinearLayout wasteTypeContainer,
      @NonNull HorizontalScrollView wasteTypeScrollView, @NonNull TextView wasteTypeTitle) {
    this.rootView = rootView;
    this.addressEditText = addressEditText;
    this.citySpinner = citySpinner;
    this.continueButton = continueButton;
    this.glassCard = glassCard;
    this.imageDescription = imageDescription;
    this.locationTextView = locationTextView;
    this.metalCard = metalCard;
    this.municipalitySpinner = municipalitySpinner;
    this.otherCard = otherCard;
    this.paperCard = paperCard;
    this.plasticCard = plasticCard;
    this.positionButton = positionButton;
    this.previewButton = previewButton;
    this.spinnerContainer = spinnerContainer;
    this.textileCard = textileCard;
    this.titleAddress = titleAddress;
    this.wasteImageView = wasteImageView;
    this.wasteTypeContainer = wasteTypeContainer;
    this.wasteTypeScrollView = wasteTypeScrollView;
    this.wasteTypeTitle = wasteTypeTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWasteTypeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWasteTypeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_waste_type, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWasteTypeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressEditText;
      EditText addressEditText = ViewBindings.findChildViewById(rootView, id);
      if (addressEditText == null) {
        break missingId;
      }

      id = R.id.citySpinner;
      Spinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.continueButton;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.glassCard;
      MaterialCardView glassCard = ViewBindings.findChildViewById(rootView, id);
      if (glassCard == null) {
        break missingId;
      }

      id = R.id.imageDescription;
      EditText imageDescription = ViewBindings.findChildViewById(rootView, id);
      if (imageDescription == null) {
        break missingId;
      }

      id = R.id.locationTextView;
      TextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.metalCard;
      MaterialCardView metalCard = ViewBindings.findChildViewById(rootView, id);
      if (metalCard == null) {
        break missingId;
      }

      id = R.id.municipalitySpinner;
      Spinner municipalitySpinner = ViewBindings.findChildViewById(rootView, id);
      if (municipalitySpinner == null) {
        break missingId;
      }

      id = R.id.otherCard;
      MaterialCardView otherCard = ViewBindings.findChildViewById(rootView, id);
      if (otherCard == null) {
        break missingId;
      }

      id = R.id.paperCard;
      MaterialCardView paperCard = ViewBindings.findChildViewById(rootView, id);
      if (paperCard == null) {
        break missingId;
      }

      id = R.id.plasticCard;
      MaterialCardView plasticCard = ViewBindings.findChildViewById(rootView, id);
      if (plasticCard == null) {
        break missingId;
      }

      id = R.id.positionButton;
      Button positionButton = ViewBindings.findChildViewById(rootView, id);
      if (positionButton == null) {
        break missingId;
      }

      id = R.id.previewButton;
      Button previewButton = ViewBindings.findChildViewById(rootView, id);
      if (previewButton == null) {
        break missingId;
      }

      id = R.id.spinnerContainer;
      LinearLayout spinnerContainer = ViewBindings.findChildViewById(rootView, id);
      if (spinnerContainer == null) {
        break missingId;
      }

      id = R.id.textileCard;
      MaterialCardView textileCard = ViewBindings.findChildViewById(rootView, id);
      if (textileCard == null) {
        break missingId;
      }

      id = R.id.titleAddress;
      TextView titleAddress = ViewBindings.findChildViewById(rootView, id);
      if (titleAddress == null) {
        break missingId;
      }

      id = R.id.wasteImageView;
      ImageView wasteImageView = ViewBindings.findChildViewById(rootView, id);
      if (wasteImageView == null) {
        break missingId;
      }

      id = R.id.wasteTypeContainer;
      LinearLayout wasteTypeContainer = ViewBindings.findChildViewById(rootView, id);
      if (wasteTypeContainer == null) {
        break missingId;
      }

      id = R.id.wasteTypeScrollView;
      HorizontalScrollView wasteTypeScrollView = ViewBindings.findChildViewById(rootView, id);
      if (wasteTypeScrollView == null) {
        break missingId;
      }

      id = R.id.wasteTypeTitle;
      TextView wasteTypeTitle = ViewBindings.findChildViewById(rootView, id);
      if (wasteTypeTitle == null) {
        break missingId;
      }

      return new ActivityWasteTypeBinding((ConstraintLayout) rootView, addressEditText, citySpinner,
          continueButton, glassCard, imageDescription, locationTextView, metalCard,
          municipalitySpinner, otherCard, paperCard, plasticCard, positionButton, previewButton,
          spinnerContainer, textileCard, titleAddress, wasteImageView, wasteTypeContainer,
          wasteTypeScrollView, wasteTypeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
