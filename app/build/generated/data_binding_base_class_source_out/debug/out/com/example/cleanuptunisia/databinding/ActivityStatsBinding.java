// Generated by view binder compiler. Do not edit!
package com.example.cleanuptunisia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleanuptunisia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStatsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextView emptyTextView;

  @NonNull
  public final TextView inProgressText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView resolvedReportsText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView totalReportsText;

  private ActivityStatsBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton backButton,
      @NonNull TextView emptyTextView, @NonNull TextView inProgressText,
      @NonNull ProgressBar progressBar, @NonNull TextView resolvedReportsText,
      @NonNull Toolbar toolbar, @NonNull TextView totalReportsText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.emptyTextView = emptyTextView;
    this.inProgressText = inProgressText;
    this.progressBar = progressBar;
    this.resolvedReportsText = resolvedReportsText;
    this.toolbar = toolbar;
    this.totalReportsText = totalReportsText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.emptyTextView;
      TextView emptyTextView = ViewBindings.findChildViewById(rootView, id);
      if (emptyTextView == null) {
        break missingId;
      }

      id = R.id.inProgressText;
      TextView inProgressText = ViewBindings.findChildViewById(rootView, id);
      if (inProgressText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.resolvedReportsText;
      TextView resolvedReportsText = ViewBindings.findChildViewById(rootView, id);
      if (resolvedReportsText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.totalReportsText;
      TextView totalReportsText = ViewBindings.findChildViewById(rootView, id);
      if (totalReportsText == null) {
        break missingId;
      }

      return new ActivityStatsBinding((RelativeLayout) rootView, backButton, emptyTextView,
          inProgressText, progressBar, resolvedReportsText, toolbar, totalReportsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
